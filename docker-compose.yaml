version: "3"

services:  

  # ===== API-DELIVERY-REACT CONTAINER =====
  ui-delivery-react:
    build: ./ui-delivery-react/.
    command: bash -c "npm run container"
    container_name: ui-delivery-react
    ports: 
      - 3001:3000
    volumes:
      - ./ui-delivery-react/.:/home/node/app
      
  # ===== API-SIMULATOR-GO CONTAINER =====
  api-simulator-go:
    build: ./api-simulator-go/.
    command: bash -c "go run main.go"
    container_name: api-simulator-go
    volumes:
      - ./api-simulator-go/.:/go/src/
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
  
  # ===== API-ROUTES-NESTJS CONTAINERS =====
  api-routes-nestjs:
    build: ./api-routes-nestjs/.
    command: bash -c "npm run container"
    container_name: api-routes-nestjs
    ports: 
      - 3000:3000
    volumes:
      - ./api-routes-nestjs/.:/home/node/app
    depends_on:
      - db-routes
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
  
  db-routes:
    image: mongo:4.4.4
    restart: always
    container_name: db-routes
    ports:
      - 27017:27017
    volumes:
      - ./api-routes-nestjs/.docker/dbdata:/data/db
      - ./api-routes-nestjs/.docker/mongo:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=nest
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=db-routes
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
    depends_on:
      - db-routes